{"ast":null,"code":"import { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE, FETCH_BY_SEARCH } from '../constants/actionTypes';\nexport default (function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case UPDATE:\n      return posts.map(post => post._id === action.payload._id ? action.payload : post);\n    case LIKE:\n      return posts.map(post => post._id === action.payload._id ? action.payload : post);\n    case FETCH_ALL:\n      return {\n        ...state,\n        posts: action.payload.data,\n        currentPage: action.payload.currentPage,\n        numberOfPages: action.payload.numberOfPages\n      };\n    case FETCH_BY_SEARCH:\n      //  return { ...state, posts: action.payload.data };\n      return action.payload;\n    case DELETE:\n      return posts.filter(post => post._id !== action.payload);\n    case CREATE:\n      return [...posts, action.payload];\n    default:\n      return posts;\n  }\n});\n\n// import { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';","map":{"version":3,"names":["FETCH_ALL","CREATE","UPDATE","DELETE","LIKE","FETCH_BY_SEARCH","state","arguments","length","undefined","action","type","posts","map","post","_id","payload","data","currentPage","numberOfPages","filter"],"sources":["C:/Users/NIDHI/Desktop/MEMORIES/client/src/reducers/posts.js"],"sourcesContent":["import { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE, FETCH_BY_SEARCH } from '../constants/actionTypes';\r\nexport default (state = [], action) => {\r\n    switch (action.type) {\r\n        case UPDATE:\r\n            return posts.map((post) => post._id === action.payload._id ? action.payload : post);\r\n\r\n        case LIKE:\r\n            return posts.map((post) => post._id === action.payload._id ? action.payload : post);\r\n\r\n        case FETCH_ALL:\r\n            return {\r\n                ...state,\r\n                posts: action.payload.data,\r\n                currentPage: action.payload.currentPage,\r\n                numberOfPages: action.payload.numberOfPages,\r\n            };\r\n\r\n        case FETCH_BY_SEARCH:\r\n            //  return { ...state, posts: action.payload.data };\r\n            return action.payload;\r\n\r\n        case DELETE:\r\n            return posts.filter((post) => post._id !== action.payload);\r\n\r\n\r\n        case CREATE:\r\n            return [...posts, action.payload];\r\n\r\n        default:\r\n            return posts;\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n// import { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\r\n\r\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEC,IAAI,EAAEC,eAAe,QAAQ,0BAA0B;AACnG,gBAAe,YAAwB;EAAA,IAAvBC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EAAA,IAAEG,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC9B,QAAQC,MAAM,CAACC,IAAI;IACf,KAAKT,MAAM;MACP,OAAOU,KAAK,CAACC,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,GAAG,KAAKL,MAAM,CAACM,OAAO,CAACD,GAAG,GAAGL,MAAM,CAACM,OAAO,GAAGF,IAAI,CAAC;IAEvF,KAAKV,IAAI;MACL,OAAOQ,KAAK,CAACC,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,GAAG,KAAKL,MAAM,CAACM,OAAO,CAACD,GAAG,GAAGL,MAAM,CAACM,OAAO,GAAGF,IAAI,CAAC;IAEvF,KAAKd,SAAS;MACV,OAAO;QACH,GAAGM,KAAK;QACRM,KAAK,EAAEF,MAAM,CAACM,OAAO,CAACC,IAAI;QAC1BC,WAAW,EAAER,MAAM,CAACM,OAAO,CAACE,WAAW;QACvCC,aAAa,EAAET,MAAM,CAACM,OAAO,CAACG;MAClC,CAAC;IAEL,KAAKd,eAAe;MAChB;MACA,OAAOK,MAAM,CAACM,OAAO;IAEzB,KAAKb,MAAM;MACP,OAAOS,KAAK,CAACQ,MAAM,CAAEN,IAAI,IAAKA,IAAI,CAACC,GAAG,KAAKL,MAAM,CAACM,OAAO,CAAC;IAG9D,KAAKf,MAAM;MACP,OAAO,CAAC,GAAGW,KAAK,EAAEF,MAAM,CAACM,OAAO,CAAC;IAErC;MACI,OAAOJ,KAAK;EAAC;AAOzB,CAAC;;AAKD"},"metadata":{},"sourceType":"module","externalDependencies":[]}