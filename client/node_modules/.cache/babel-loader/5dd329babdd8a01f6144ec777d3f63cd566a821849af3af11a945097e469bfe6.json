{"ast":null,"code":"import * as api from '../api';\nimport { FETCH_ALL, FETCH_POST, CREATE, UPDATE, DELETE, LIKE, FETCH_BY_SEARCH, END_LOADING, START_LOADING } from '../constants/actionTypes';\nexport const getPost = id => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.fetchPost(id);\n    console.log(data);\n    dispatch({\n      type: FETCH_POST,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const getPosts = page => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.fetchPosts(page);\n    console.log(data);\n    dispatch({\n      type: FETCH_ALL,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const getPostsBySearch = searchQuery => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data: {\n        data\n      }\n    } = await api.fetchPostsBySearch(searchQuery);\n    console.log(data);\n    dispatch({\n      type: FETCH_BY_SEARCH,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createPost = (post, navigate) => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.createPost(post);\n    navigate(`/posts/${data._id}`);\n    dispatch({\n      type: CREATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id, post);\n    dispatch({\n      type: UPDATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    await api.deletePost(id);\n    dispatch({\n      type: DELETE,\n      payload: id\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const likePost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.likePost(id);\n    dispatch({\n      type: LIKE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["api","FETCH_ALL","FETCH_POST","CREATE","UPDATE","DELETE","LIKE","FETCH_BY_SEARCH","END_LOADING","START_LOADING","getPost","id","dispatch","type","data","fetchPost","console","log","payload","error","message","getPosts","page","fetchPosts","getPostsBySearch","searchQuery","fetchPostsBySearch","createPost","post","navigate","_id","updatePost","deletePost","likePost"],"sources":["C:/Users/NIDHI/Desktop/MEMORIES/client/src/actions/posts.js"],"sourcesContent":["import * as api from '../api';\r\n import { FETCH_ALL,FETCH_POST, CREATE, UPDATE, DELETE, LIKE,FETCH_BY_SEARCH,END_LOADING, START_LOADING  } from '../constants/actionTypes';\r\n\r\n export const getPost = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: START_LOADING });\r\n    const { data } = await api.fetchPost(id);\r\n\r\n    console.log(data);\r\n    dispatch({ type: FETCH_POST, payload: data });\r\n    dispatch({ type: END_LOADING });\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\n\r\nexport const getPosts = (page) => async (dispatch) => {\r\n    try {\r\n      dispatch({ type: START_LOADING });\r\n      const { data } = await api.fetchPosts(page);\r\n\r\n      console.log(data);\r\n      dispatch({ type: FETCH_ALL, payload: data });\r\n      dispatch({ type: END_LOADING });\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n\r\n  export const getPostsBySearch = (searchQuery) => async (dispatch) => {\r\n    try {\r\n      dispatch({ type: START_LOADING });\r\n      const { data: { data } } = await api.fetchPostsBySearch(searchQuery);\r\n      console.log(data);\r\n      dispatch({ type: FETCH_BY_SEARCH, payload:  data  });\r\n    dispatch({ type: END_LOADING });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  \r\n  export const createPost = (post,navigate) => async (dispatch) => {\r\n    try {\r\n      dispatch({ type: START_LOADING });\r\n      const { data } = await api.createPost(post);\r\n      navigate(`/posts/${data._id}`);\r\n  \r\n      dispatch({ type: CREATE, payload: data });\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  export const updatePost = (id, post) => async (dispatch) => {\r\n    try {\r\n      const { data } = await api.updatePost(id, post);\r\n  \r\n      dispatch({ type: UPDATE, payload: data });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  export const deletePost = (id) => async (dispatch) => {\r\n    try {\r\n      await api.deletePost(id);\r\n  \r\n      dispatch({ type: DELETE, payload: id });\r\n\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n\r\n  export const likePost = (id) => async (dispatch) => {\r\n    try {\r\n      const { data } = await api.likePost(id);\r\n  \r\n      dispatch({ type: LIKE, payload: data });\r\n\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}