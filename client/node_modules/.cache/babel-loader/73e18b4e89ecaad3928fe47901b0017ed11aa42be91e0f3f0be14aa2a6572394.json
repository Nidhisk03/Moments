{"ast":null,"code":"// export default (posts = [] , action) => {\n//       switch(action.type){\n//         case 'UPDATE':\n//             return posts.map((post) => post._id=== action.payload._id ? action.payload : post);\n\n//         case 'LIKE':\n//                 return posts.map((post) => post._id=== action.payload._id ? action.payload : post); \n\n//         case 'FETCH_ALL':\n//             return action.payload;\n\n//         case 'DELETE':\n//                 return posts.filter((post) => post._id !== action.payload);\n\n//         case 'CREATE':\n//             return [...posts,action.payload];\n\n//         default:\n//             return posts;\n\n//       }\n// }\n\n// import { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\n\nexport default (function () {\n  let posts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case 'FETCH_ALL':\n      return action.payload;\n    // case 'LIKE':\n    //   return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\n    case 'CREATE':\n      return [...posts, action.payload];\n    // case 'UPDATE':\n    //   return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\n    // case 'DELETE':\n    //   return posts.filter((post) => post._id !== action.payload);\n    default:\n      return posts;\n  }\n});","map":{"version":3,"names":["posts","arguments","length","undefined","action","type","payload"],"sources":["C:/Users/NIDHI/Desktop/MEMORIES/client/src/reducers/posts.js"],"sourcesContent":["// export default (posts = [] , action) => {\r\n//       switch(action.type){\r\n//         case 'UPDATE':\r\n//             return posts.map((post) => post._id=== action.payload._id ? action.payload : post);\r\n\r\n//         case 'LIKE':\r\n//                 return posts.map((post) => post._id=== action.payload._id ? action.payload : post); \r\n\r\n//         case 'FETCH_ALL':\r\n//             return action.payload;\r\n\r\n//         case 'DELETE':\r\n//                 return posts.filter((post) => post._id !== action.payload);\r\n\r\n//         case 'CREATE':\r\n//             return [...posts,action.payload];\r\n        \r\n//         default:\r\n//             return posts;\r\n\r\n\r\n        \r\n\r\n\r\n//       }\r\n// }\r\n\r\n\r\n\r\n\r\n// import { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\r\n\r\nexport default (posts = [], action) => {\r\n  switch (action.type) {\r\n    case 'FETCH_ALL':\r\n      return action.payload;\r\n    // case 'LIKE':\r\n    //   return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\r\n    case 'CREATE':\r\n      return [...posts, action.payload];\r\n    // case 'UPDATE':\r\n    //   return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\r\n    // case 'DELETE':\r\n    //   return posts.filter((post) => post._id !== action.payload);\r\n    default:\r\n      return posts;\r\n  }\r\n};"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAMA;AACA;;AAKA;;AAEA,gBAAe,YAAwB;EAAA,IAAvBA,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EAAA,IAAEG,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAChC,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAK,WAAW;MACd,OAAOD,MAAM,CAACE,OAAO;IACvB;IACA;IACA,KAAK,QAAQ;MACX,OAAO,CAAC,GAAGN,KAAK,EAAEI,MAAM,CAACE,OAAO,CAAC;IACnC;IACA;IACA;IACA;IACA;MACE,OAAON,KAAK;EAAC;AAEnB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}