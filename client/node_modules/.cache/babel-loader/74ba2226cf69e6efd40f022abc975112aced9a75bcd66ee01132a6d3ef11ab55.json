{"ast":null,"code":"import * as api from '../api';\nimport { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE, FETCH_BY_SEARCH, END_LOADING, START_LOADING } from '../constants/actionTypes';\nexport const getPosts = page => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchPosts(page);\n    console.log(data);\n    dispatch({\n      type: FETCH_ALL,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const getPostsBySearch = searchQuery => async dispatch => {\n  try {\n    // dispatch({ type: START_LOADING });\n    const {\n      data: {\n        data\n      }\n    } = await api.fetchPostsBySearch(searchQuery);\n    console.log(data);\n    dispatch({\n      type: FETCH_BY_SEARCH,\n      payload: data\n    });\n    //dispatch({ type: END_LOADING });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createPost = post => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.createPost(post);\n    dispatch({\n      type: CREATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id, post);\n    dispatch({\n      type: UPDATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    await api.deletePost(id);\n    dispatch({\n      type: DELETE,\n      payload: id\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const likePost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.likePost(id);\n    dispatch({\n      type: LIKE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["api","FETCH_ALL","CREATE","UPDATE","DELETE","LIKE","FETCH_BY_SEARCH","END_LOADING","START_LOADING","getPosts","page","dispatch","data","fetchPosts","console","log","type","payload","error","message","getPostsBySearch","searchQuery","fetchPostsBySearch","createPost","post","updatePost","id","deletePost","likePost"],"sources":["C:/Users/NIDHI/Desktop/MEMORIES/client/src/actions/posts.js"],"sourcesContent":["import * as api from '../api';\r\n import { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE,FETCH_BY_SEARCH,END_LOADING, START_LOADING  } from '../constants/actionTypes';\r\n\r\n\r\n\r\nexport const getPosts = (page) => async (dispatch) => {\r\n    try {\r\n      const { data } = await api.fetchPosts(page);\r\n      console.log(data);\r\n      dispatch({ type: FETCH_ALL, payload: data });\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n\r\n  export const getPostsBySearch = (searchQuery) => async (dispatch) => {\r\n    try {\r\n     // dispatch({ type: START_LOADING });\r\n      const { data: { data } } = await api.fetchPostsBySearch(searchQuery);\r\n      console.log(data);\r\n      dispatch({ type: FETCH_BY_SEARCH, payload:  data  });\r\n      //dispatch({ type: END_LOADING });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  \r\n  export const createPost = (post) => async (dispatch) => {\r\n    try {\r\n      const { data } = await api.createPost(post);\r\n  \r\n      dispatch({ type: CREATE, payload: data });\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  export const updatePost = (id, post) => async (dispatch) => {\r\n    try {\r\n      const { data } = await api.updatePost(id, post);\r\n  \r\n      dispatch({ type: UPDATE, payload: data });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  export const deletePost = (id) => async (dispatch) => {\r\n    try {\r\n      await api.deletePost(id);\r\n  \r\n      dispatch({ type: DELETE, payload: id });\r\n\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n\r\n  export const likePost = (id) => async (dispatch) => {\r\n    try {\r\n      const { data } = await api.likePost(id);\r\n  \r\n      dispatch({ type: LIKE, payload: data });\r\n\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}